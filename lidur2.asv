% Constants
L = 2; % Beam length in meters
EI = 1.3e10 * (0.3 * 0.03^3) / 12; % Modulus of elasticity * Moment of inertia
f = -480 * 0.3 * 0.03 * 9.81; % Uniform load

% Number of grid steps and corresponding x positions
n = 10;
x = linspace(0, L, n+1); % x positions for plotting

% Calculated displacements 'y' from the previous step's solution

% Correct solution function
y_correct = @(x) (f / (24 * EI)) * x.^2 .* (x.^2 - 4*L*x + 6*L^2);

% Evaluate correct solution at x positions
y_correct_vals = y_correct(x);

% Plot the calculated solution
plot(x(2:end), y, 'b-o', 'DisplayName', 'Calculated Solution'); % Assuming 'y' is the solution vector from the linear system

hold on;
% Plot the correct solution
plot(x, y_correct_vals, 'r-', 'DisplayName', 'Correct Solution');
hold off;

% Adding labels and legend
xlabel('Position along the beam (m)');
ylabel('Displacement (m)');
title('Comparison of Beam Displacement');
legend('Location', 'best');

% Error at the end of the beam, x = L
error_at_L = abs(y(end) - y_correct_vals(end));
fprintf('Error at the end of the beam (x = L): %g\n', error_at_L);
